@model BusinessLayer.FoodItem

@*@using BusinessLayer;*@

@{
    ViewBag.Title = "Create New Food Item";
}

<h2>Create New Food Item</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @*<fieldset>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.FoodName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FoodName)
            @Html.ValidationMessageFor(model => model.FoodName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FoodGroupId)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.FoodGroupId)*@
            @Html.DropDownList("FoodGroupId", "Select Food Group")
            @Html.ValidationMessageFor(model => model.FoodGroupId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.SubFoodGroupId)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.SubFoodGroupId)*@
            @Html.DropDownList("SubFoodGroupId", "Select Food Sub Group")
            @Html.ValidationMessageFor(model => model.SubFoodGroupId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FoodCost)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FoodCost)
            @Html.ValidationMessageFor(model => model.FoodCost)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.BuyingPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BuyingPrice)
            @Html.ValidationMessageFor(model => model.BuyingPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FoodWeightTypeId)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.FoodWeightTypeId)*@
            @Html.DropDownList("FoodWeightTypeId", "Select Bundle Type")
            @Html.ValidationMessageFor(model => model.FoodWeightTypeId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.QuantityAvailable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuantityAvailable)
            @Html.ValidationMessageFor(model => model.QuantityAvailable)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SellerId)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.SellerId)*@
            @Html.DropDownList("SellerId", "Select Seller's Name")
            @Html.ValidationMessageFor(model => model.SellerId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FoodPicture)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FoodPicture)
            @Html.ValidationMessageFor(model => model.FoodPicture)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.AlternateText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AlternateText)
            @Html.ValidationMessageFor(model => model.AlternateText)
        </div>



        <p>
            <input type="submit" value="Create" />
        </p>
    @*</fieldset>*@
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

