@using QuickySaleOnlineShopper;
@using PagedList;
@using PagedList.Mvc;

@model IPagedList<QuickySaleOnlineShopper.Models.FoodItem>
@helper Truncate(string
input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}

@{
    ViewBag.Title = "Food Item List";

}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.First().FoodName)*@
            @Html.ActionLink("Food Name", "Index", new { sortBy = ViewBag.SortNameParameter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FoodGroupId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FoodCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().BuyingPrice)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.FoodWeightTypeId)*@
            Package
        </th>
        <th>
           Quantity
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SellerId)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.FoodPicture)
            </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.SubFoodGroupId)
        </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        using (Html.BeginForm("Delete", "StoreManagerFoodItem", new { id = item.FoodItemId }))
        {
            <tr>
                <td>
                    @*@Html.DisplayFor(modelItem => item.FoodName)*@
                    @Truncate(item.FoodName, 20)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.FoodGroup.FoodGroupName)*@
                    @Truncate(item.FoodGroup.FoodGroupName,10)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FoodCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BuyingPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FoodWeightType.FoodWeightTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityAvailable)
                </td>
                <td>
                   @Truncate(item.QSSellerDetail.SellerName, 15)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.FoodPicture)
                    </td>*@
                @*<td>
                    @Html.DisplayFor(modelItem => item.SubFoodGroup.SubFoodGroupName)
                </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.FoodItemId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.FoodItemId }) |
                    <input type="submit" value="Delete"
                           onclick="return confirm('Are you sure you want to Delete FoodItem = @item.FoodName at Price =@item.FoodCost')" />
                </td>
            </tr>

        }
    }

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortBy = Request.QueryString["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })  
<div>
    @Html.ActionLink("Back", "Index", "StoreManagerItems")
</div>
